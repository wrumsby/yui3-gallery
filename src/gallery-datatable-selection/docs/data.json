{
    "project": {},
    "files": {
        "js/gallery-datatable-selection.js": {
            "name": "js/gallery-datatable-selection.js",
            "modules": {
                "Selection": 1
            },
            "classes": {
                "Y.DataTable.Selection": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "DataTable": {
            "name": "DataTable",
            "submodules": {
                "Selection": 1
            },
            "classes": {
                "Y.DataTable.Selection": 1
            },
            "fors": {},
            "namespaces": {},
            "file": "js/gallery-datatable-selection.js",
            "line": 1
        },
        "Selection": {
            "name": "Selection",
            "submodules": {},
            "classes": {
                "Y.DataTable.Selection": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "DataTable",
            "namespace": "",
            "file": "js/gallery-datatable-selection.js",
            "line": 1,
            "description": "A class extension for DataTable that adds \"highlight\" and \"select\" actions via mouse selection.\nThe extension works in either \"cell\" mode or \"row\" mode (set via attribute [selectionMode](#attr_selectionMode)).\n\nHighlighting is controlled by the [highlightMode](#attr_highlightMode) attribute (either \"cell\" or \"row\").\n(Highlighting provides a \"mouseover\" indication only).\n\nSelection is provided via \"click\" listeners.\n\nThis extension includes the ability to select \"multiple\" items, by setting the [selectionMulti](#attr_selectionMulti)\nattribute (enabled using browser multi-select click modifier, i.e. \"Cmd\" key on Mac OSX or \"Ctrl\" key on Windows / Linux).\n\nAdditionally, a \"range\" selection capability is provided by using the browser range selector click key modifier,\nspecifically the Shift key on most systems.\n\nThe extension has been written to allow preserving the \"selected\" rows or cells during \"sort\" operations.\n\nSpecific attributes are provided that can be read for current selections, including the ATTRS [selectedRows](#attr_selectedRows),\nand [selectedCells](#attr_selectedCells).\n\nTypical usage would be to set the \"selectionMode\" attribute (and selectionMulti if desired), and then to listen to for the\n[selection](#event_selection) event to respond to each \"click\" selection.",
            "extends": "Y.DataTable",
            "author": "Todd Smith",
            "version": "1.0.0",
            "since": "3.6.0"
        }
    },
    "classes": {
        "Y.DataTable.Selection": {
            "name": "Y.DataTable.Selection",
            "shortname": "Y.DataTable.Selection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataTable",
            "submodule": "Selection",
            "namespace": "",
            "file": "js/gallery-datatable-selection.js",
            "line": 1,
            "description": "A class extension for DataTable that adds \"highlight\" and \"select\" actions via mouse selection.\nThe extension works in either \"cell\" mode or \"row\" mode (set via attribute [selectionMode](#attr_selectionMode)).\n\nHighlighting is controlled by the [highlightMode](#attr_highlightMode) attribute (either \"cell\" or \"row\").\n(Highlighting provides a \"mouseover\" indication only).\n\nSelection is provided via \"click\" listeners.\n\nThis extension includes the ability to select \"multiple\" items, by setting the [selectionMulti](#attr_selectionMulti)\nattribute (enabled using browser multi-select click modifier, i.e. \"Cmd\" key on Mac OSX or \"Ctrl\" key on Windows / Linux).\n\nAdditionally, a \"range\" selection capability is provided by using the browser range selector click key modifier,\nspecifically the Shift key on most systems.\n\nThe extension has been written to allow preserving the \"selected\" rows or cells during \"sort\" operations.\n\nSpecific attributes are provided that can be read for current selections, including the ATTRS [selectedRows](#attr_selectedRows),\nand [selectedCells](#attr_selectedCells).\n\nTypical usage would be to set the \"selectionMode\" attribute (and selectionMulti if desired), and then to listen to for the\n[selection](#event_selection) event to respond to each \"click\" selection."
        }
    },
    "classitems": [
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 35,
            "description": "Node for the most recent \"highlighted\" item, either TD or TR",
            "itemtype": "attribute",
            "name": "highlighted",
            "type": "{Node}",
            "default": "null",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 46,
            "description": "Node for the most recent \"selected\" item, either TD or TR",
            "itemtype": "attribute",
            "name": "selected",
            "type": "{Node}",
            "default": "null",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 57,
            "description": "Set the current mode for highlighting, either for a single TD (as \"cell\") or for a\nfull TR (as \"row\")",
            "itemtype": "attribute",
            "name": "highlightMode",
            "type": "{String}",
            "default": "null",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 73,
            "description": "Set the current mode for indicating selections, either for a single TD (as \"cell\") or for a\nfull TR (as \"row\")",
            "itemtype": "attribute",
            "name": "selectionMode",
            "type": "{String}",
            "default": "null",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 90,
            "description": "Attribute that holds the selected TR's associated with either the selected \"rows\" or the\n TR's that are related to the selected \"cells\", duplicates are excluded.\n\nOn input, accepts an Array of record indices for rows that should be set as \"selected\".\n(Please refer to method [_setSelectedRows](#method__setSelectedRows))\n\n         dt.set('selectedRows',[ 1, 5, 9, 11]);\n         // selects the 2nd, 6th, 10th and 12th records\n\nFor reading this setting, it returns an Array of objects containing {tr,record,recordIndex} for each\n selected \"row\"; where \"tr\" is a Y.Node instance and \"record\" is the Model for the TR and \"recordIndex\" is the\n record index within the current dataset.\n(Please refer to method [_getSelectedRows](#method__getSelectedRows))",
            "itemtype": "attribute",
            "name": "selectedRows",
            "type": "{Array}",
            "default": "[]",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 116,
            "description": "Attribute that holds the selected TD's associated with the selected \"cells\", or related to the\n selected \"rows\" if that is the `selectionMode`.\n\n On input, an Array can be provided to pre-set as \"selected\" cells, defined as each element being\n in {record,column} format; where \"record\" is the record index (or clientId) and \"column\" is either\n the column index or the key/name for the column.\n (Please see method [_setSelectedCells](#method__setSelectedCells) for reference).\n\n         dt.set('selectedCells',[{record:0,column:'fname'}, {record:187,column:7} ]);\n\n For reading the selected cells (via \"get\"), an array is returned with contains {Object} elements\n that describe the row / column combinations of each currently selected cell.\n (Please see method [_getSelectedCells](#method__getSelectedCells) for full information on the returned objects).",
            "itemtype": "attribute",
            "name": "selectedCells",
            "type": "{Array}",
            "default": "[]",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 142,
            "description": "Flag to allow either single \"selections\" (false) or multiple selections (true).\nFor Macintosh OSX-type systems the modifier key \"Cmd\" is held for multiple selections,\n and for Windows or Linux type systems the modifier key is \"Ctrl\".",
            "itemtype": "attribute",
            "name": "selectionMulti",
            "type": "{Boolean}",
            "default": "false",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 161,
            "itemtype": "property",
            "name": "_selections",
            "type": "Array",
            "default": "null",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 170,
            "description": "Holder for the classname for the \"highlight\" TR or TD",
            "itemtype": "property",
            "name": "_classHighlight",
            "type": "String",
            "default": "null",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 180,
            "description": "Holder for the classname for the \"selected\" TR or TD",
            "itemtype": "property",
            "name": "_classSelected",
            "type": "String",
            "default": "null",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 190,
            "description": "Holder for the most recent \"click\" event modifier keys from last click,\n used for assessing \"multi\" selections.\n\nContains properties;  altKey, ctrlKey, shiftKey, metaKey, button and which\n\nFilled initially by .initializer and on each Table \"click\".",
            "itemtype": "property",
            "name": "_clickModifiers",
            "type": "Object",
            "default": "null",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 210,
            "description": "Initializes and sets initial bindings for the datatable-selection module",
            "itemtype": "method",
            "name": "initializer",
            "access": "protected",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 219,
            "description": "Destructor to clean up bindings.",
            "itemtype": "method",
            "name": "destructor",
            "access": "protected",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 234,
            "description": "Method to enable the datatable-selection module",
            "itemtype": "method",
            "name": "disableSelection",
            "access": "public",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 244,
            "description": "Method to disable the datatable-selection module (cleans up listeners and user interface).",
            "itemtype": "method",
            "name": "disableSelection",
            "access": "public",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 254,
            "description": "Returns the Column object (from the original \"columns\") associated with the input TD Node.",
            "itemtype": "method",
            "name": "getColumnByTd",
            "params": [
                {
                    "name": "cell",
                    "description": "Node of TD for which column object is desired",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "column The column object entry associated with the desired cell",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 267,
            "description": "Returns the column \"key\" or \"name\" string for the requested TD Node",
            "itemtype": "method",
            "name": "getColumnNameByTd",
            "params": [
                {
                    "name": "cell",
                    "description": "Node of TD for which column name is desired",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "colName Column name or key name",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 290,
            "description": "Utility method that will return all selected TD Nodes for the current \"selected\" set.\nIf selections include a TR row, all child TD's from the row are included.",
            "itemtype": "method",
            "name": "getSelectedTds",
            "return": {
                "description": "tds Array of selected TD's as Nodes",
                "type": "Array"
            },
            "access": "public",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 312,
            "description": "Removes all \"selected\" classes from DataTable and resets internal selections counters and \"selected\" attribute.",
            "itemtype": "method",
            "name": "clearSelections",
            "access": "public",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 323,
            "description": "Removes all \"highlight\" classes from DataTable and resets `highlighted` attribute.",
            "itemtype": "method",
            "name": "clearHighlighted",
            "access": "public",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 333,
            "description": "Removes all highlighting and selections on the DataTable.",
            "itemtype": "method",
            "name": "clearAll",
            "access": "public",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 347,
            "description": "Cleans up listener event handlers and static properties.",
            "itemtype": "method",
            "name": "_unbindSelector",
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 367,
            "description": "Sets listeners and initial class names required for this \"datatable-selector\" module\n\nNote:  Delegated \"click\" listeners are defined in _setSelectedMode and _setHightlightMode methods",
            "itemtype": "method",
            "name": "_bindSelector",
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 400,
            "description": "Method that updates the \"highlighted\" classes for the selection and unhighlights the prevVal",
            "itemtype": "method",
            "name": "_highlightChange",
            "params": [
                {
                    "name": "o",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 410,
            "description": "Method that updates the \"selected\" classes for the selection and un-selects the prevVal.\nThis method works with multiple selections (via ATTR `selectionMulti` true) by pushing\nthe current selection to the this._selections property.",
            "itemtype": "method",
            "name": "_selectedChange",
            "params": [
                {
                    "name": "o",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 467,
            "itemtype": "event",
            "name": "selected",
            "deprecated": true,
            "params": [
                {
                    "name": "obj",
                    "description": "Return object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ochange",
                            "description": "Change event object passed from attribute 'selected'",
                            "type": "Object"
                        },
                        {
                            "name": "record",
                            "description": "DataTable record (Y.Model) instance for the selection",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 475,
            "description": "Event that fires on every DataTable \"select\" event, returns current selections, either cells or rows depending\non the current \"selectionMode\".",
            "itemtype": "event",
            "name": "selection",
            "params": [
                {
                    "name": "obj",
                    "description": "Return object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "selectionMode",
                            "description": "Current setting of attribute [selectionMode](#attr_selectionMode)",
                            "type": "Object"
                        },
                        {
                            "name": "cells",
                            "description": "Returns the current setting of the attribute [selectedCells](#attr_selectedCells)",
                            "type": "Object"
                        },
                        {
                            "name": "rows",
                            "description": "Returns the current setting of the attribute [selectedRows](#attr_selectedRows)",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 486,
            "description": "Called when a \"range\" selection is detected (i.e. SHIFT key held during click) that selects\na range of TD's or TR's (depending on [selectionMode](#attr_selectionMode) setting.",
            "itemtype": "method",
            "name": "_processRange",
            "params": [
                {
                    "name": "o",
                    "description": "Last clicked TD of range selection",
                    "type": "Node"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 556,
            "description": "Returns the current settings of row selections, includes multiple selections.  If the\ncurrent `selectionMode` is \"cell\" mode, this function returns the unique \"records\" associated with\nthe selected cells.\n\n**Returned** `rows` {Array} of objects in format;\n<ul>\n  <li>`rows.tr` {Node} Node instance of the TR that was selected</li>\n  <li>`rows.record` {Model} The Model associated with the data record for the selected TR</li>\n  <li>`rows.recordIndex` {Integer} The record index of the selected TR within the current \"data\" set</li>\n</ul>",
            "itemtype": "method",
            "name": "_getSelectedRows",
            "return": {
                "description": "rows Array of selected \"rows\" as objects in {tr,record,recordIndex} format",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 594,
            "description": "Getter method that returns an Array of the selected cells in record/column coordinate format.\nIf rows or TR elements were selected, it adds all of the row's child TD's.\n\n**Returned** `cells` {Array} of objects in format;\n<ul>\n  <li>`cells.td` {Node} TD Node for this cell.</li>\n  <li>`cells.record` {Model} Record for this cell as a Y.Model</li>\n  <li>`cells.recordIndex` {Integer} Record index for this cell in the current \"data\" set</li>\n  <li>`cells.column` {Object} Column for this cell defined in original \"columns\" DataTable attribute</li>\n  <li>`cells.columnName` {String} Column name or key associated with this cell</li>\n  <li>`cells.columnIndex` {Integer} Column index of the column, within the \"columns\" data</li>\n</ul>",
            "itemtype": "method",
            "name": "_getSelectedCells",
            "return": {
                "description": "cells The selected cells in {record,recordIndex,column,columnName,columnIndex} format",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 654,
            "description": "Setter method for attribute `selectedCells` that takes an array of cells as input and sets them\nas the current selected set with appropriate visual class.",
            "itemtype": "method",
            "name": "_setSelectedCells",
            "params": [
                {
                    "name": "val",
                    "description": "The desired cells to set as selected, in {record:,column:} format",
                    "type": "Array",
                    "props": [
                        {
                            "name": "record",
                            "description": "Record for this cell as either record index or record clientId",
                            "type": "String|Number"
                        },
                        {
                            "name": "column",
                            "description": "Column for this cell as either the column index or \"key\" or \"name\"",
                            "type": "String|Number"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 687,
            "description": "A setter method for attribute `selectedRows` that takes as input an array of desired DataTable\nrecord indices to be \"selected\", clears existing selections and sets the \"selected\" records and\nhighlights the TR's",
            "itemtype": "method",
            "name": "_setSelectedRows",
            "params": [
                {
                    "name": "val",
                    "description": "recIndices Array of record indices desired to be set as selected.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "records Array of DataTable records (Y.Model) for each selection chosen",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 711,
            "description": "Method is fired BEFORE a \"reset\" action takes place on the \"data\", usually related to a column sort.\nThis is used to preserve the pre-sorted data (temporarily in _selections) prior to sorting so that\nwe can reapply the \"selections\" after the sort is completed (see [_afterResetDataSelect](#method__afterResetDataSelect))",
            "itemtype": "method",
            "name": "_beforeResetDataSelect",
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 756,
            "description": "Method is fired AFTER a \"reset\" action takes place on the \"data\", usually related to a column sort.\nThis function reads the pre-sorted selections that were stored by  [_beforeResetDataSelect](#method__beforeResetDataSelect)\ntemporarily in this._selections.\n\nDepending upon the current \"selectionMode\", either post-sorted TBODY selections are re-applied, by determining either\nthe TR's (from the Model data) or the TD's (from the Model and Column Index data).",
            "itemtype": "method",
            "name": "_afterResetDataSelect",
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 796,
            "description": "Method used to derive from the clicked selection, either the TR or TD of the selection, and\nreturns the current `selectionMode` or `highlightMode` Node (based on the setting of prefix).\n\nThis method adds the required class, and if erasePrev is true, removes the class from the prior setting.",
            "itemtype": "method",
            "name": "_processNodeAction",
            "params": [
                {
                    "name": "o",
                    "description": "Attribute change event object",
                    "type": "Object"
                },
                {
                    "name": "prefix",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "erasePrev",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "node Returned target Y.Node, either TR or TD based upon current `selectionMode` or `highlightMode`",
                "type": "Node"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 840,
            "description": "Method removes the specified `type` CSS class from all nodes within the TBODY data node.",
            "itemtype": "method",
            "name": "_clearAll",
            "params": [
                {
                    "name": "type",
                    "description": "Class name to remove from all nodes attached to TBODY DATA",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 852,
            "description": "Setter for `highlightMode` attribute, removes prior event handle (if exists) and defines\na new delegated \"mouseover\" handler that updates the `highlighted` attribute.\n\nA change to this setting clears all prior highlighting.",
            "itemtype": "method",
            "name": "_setHighlightMode",
            "params": [
                {
                    "name": "val",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 874,
            "description": "Setter for `selectionMode` attribute, removes prior event handle (if exists) and defines\na new delegated \"click\" handler that updates the `selected` attribute.\n\nA change to this setting clears all prior selections.",
            "itemtype": "method",
            "name": "_setSelectionMode",
            "params": [
                {
                    "name": "val",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        },
        {
            "file": "js/gallery-datatable-selection.js",
            "line": 909,
            "description": "Helper method to clear DOM \"selected\" text or ranges",
            "itemtype": "method",
            "name": "_clearDOMSelection",
            "access": "private",
            "tagname": "",
            "class": "Y.DataTable.Selection",
            "module": "DataTable",
            "submodule": "Selection"
        }
    ]
}